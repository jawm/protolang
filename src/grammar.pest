WHITESPACE = _{" "}
COMMENT    = _{ "#" ~ (!NEWLINE~ANY)* ~ NEWLINE}

keywords = @{
	(
    "and" |
    "break" |
    "continue" |
    "else" |
    "excl" |
    "fn" |
    "for" |
    "if" |
    "import" |
    "in" |
    "move" |
    "nonlocal" |
    "or" |
    "return" |
    "while" |
    ) ~ !(ASCII_ALPHANUMERIC | "_")
}

file = { SOI ~ multiple_expression ~ EOI }

multiple_expression = !{ NEWLINE* ~ expression? ~ (NEWLINE+ ~ expression)* ~ NEWLINE* }

expression = !{
	block |
    assign |
    function |
    body_ret |
    if_expr
}

block = { ("{" ~ multiple_expression ~ "}")}
assign = { ident ~ "=" ~ expression }
function = { "fn" ~ "(" ~ params? ~ ")" ~ signature_ret? ~ expression }
params = { variable ~ ("," ~ variable)* }
signature_ret = { "->" ~ "return" }
ident = @{ !keywords ~ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
body_ret = ${ "return" ~ (" " ~ expression)? }

if_expr = {
	"if" ~ expression ~ expression ~ ( "else" ~ expression )? |
    while_expr
}

while_expr = {
	"while" ~ expression ~ expression |
    logic_or
}

logic_or = {
	logic_and ~ ("or" ~ logic_and)*
}

logic_and = {
	equality ~ ("and" ~ equality)*
}

equality = {comparison ~ ( ("!=" | "==") ~ comparison)* }
comparison = { addition ~ ( ( ">" | ">=" | "<" | "<=") ~ addition )* }
addition = { multiplication ~ ( ( "+" | "-") ~ multiplication )* }
multiplication = { unary ~ ( ( "*" | "/" ) ~ unary)* }
unary = { ("!" | "-") ~ unary | call }
call = { primary ~ ("(" ~ args? ~ ")")? }
args = { expression ~ ("," ~ expression)* }

primary = {
	number |
    string |
    boolean |
    grouping |
    variable
}

number = @{NUMBER+ ~ ("."~NUMBER+)?}

string = ${ "\"" ~ string_inner ~ "\"" }
string_inner = {
	(
    	(&"\\\"" ~ "\\\"") | // an escaped double quote
		(!"\"") ~ ANY        // Any other character that isn't a double quote
    )*
}

boolean = { "true" | "false" }
grouping = { "(" ~ expression ~ ")" }
variable = ${ ("move " | "excl ")? ~ ident }